openapi: 3.0.3
info:
  title: 'DOCUMENTATION API SUMBANGIN AJA'
  description: 'Documantation api sumbangin aja production'
  version: 1.0.0
servers:
  -
    url: 'http://127.0.0.1:8000'
paths:
  /api/login-oauth:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/daftar:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: string
        description: 'Optional parameter. name required The name is string'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: similique
  /api/register:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/login:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/v1/foods/{name}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: name
        description: ''
        example: 18
        required: true
        schema:
          type: integer
  '/api/v1/community/{name}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: name
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/userJoinCommunity:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/ShowCommunityByUser:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/v1/showCommunityFilter/{community_id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: community_id
        description: 'The ID of the community.'
        example: voluptatum
        required: true
        schema:
          type: string
  /api/v1/foods:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/v1/foods/{food_id}/show':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: food_id
        description: 'The ID of the food.'
        example: 3
        required: true
        schema:
          type: integer
  /api/v1/food/create:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: quidem
                images:
                  type: string
                  description: ''
                  example: omnis
                descriptions:
                  type: string
                  description: ''
                  example: ducimus
                payback_time:
                  type: string
                  description: ''
                  example: autem
              required:
                - name
                - images
                - descriptions
                - payback_time
      security: []
  '/api/v1/foods/{food_id}':
    delete:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: food_id
        description: 'The ID of the food.'
        example: 20
        required: true
        schema:
          type: integer
  /api/v1/communities:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/v1/community/{community_id}/show':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: community_id
        description: 'The ID of the community.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/community/create:
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: explicabo
                images:
                  type: string
                  description: 'Must not be greater than 2048 characters.'
                  example: ilqndrnmqwlzscgrmqcahncpdpjugxrajviyjfuelkvesqdrlmrimiptgmttcpkxpbzgmkjsqwssohaaawtcwhbiakoptwbsrlicbkjpjdvawnadevtutduxemirzyrzpucavduooldhdhofdqycxaojwmticnaqjheasljpremqaajwowjgxskrqcnpggdsqjprprhqyzxazamwqyzwruczdigbohosbcrixikthhdwrseqquajbjcwqkkhpupmmrbbamapuincwfocbxnkqmqjbubfbmnshdgvswicewougazgdyrhdabsfgzpqmswgtoozsnxoydmpwgbxrfivvesquerkwblboymeptnbwtzvxthibpummmheftbbsszwemjtyfsqyowcefooqvfxacanqojrvmrvnblwfwrzytijqendyrwyjtoakowjtjjtpllynkabehthzxocywjdpgsuxkpemsvnvcdejqryaygtoqufpvfpkwyyjsaoiaxhlqgsezwwdpxqbspxkbtajpeqtjrdgeimflndppwtenshktwxggensksdehuccryemxtkasdfwncvvdezgkjynyzhhrvyllroxxlqocvkpkpafadmwnhbugcyoqegbxovvbczcqwsodjfuxstvtpbmithicxdxteevszwyjzmuljtmppdvcvxzfbgycdjpcyjggqzdkzmmqkfgteebmktyaorszgievafhdqwkhnptdxscwtqdlsyyaveqwumyeqwnumfgnbpxnnaopvzgybdpwgauaojbjzrcvmfucwjxkrymyjkntkcedvvfyrdyiwkinyzjjabyhbwzlayfeuokagekcfckbvmbmjvhlhhsmjwzwteiffroitupzjpcdrufopvqgdwzrvxmtvhwwmxcjkqctioefgkmhehwefrejjutphpuirlzrhuacsycalxecmcqacgrtlxnsdtnusdrsbtoporrnkykyflfjangnsikfagatxgbkaqtezbejqwtjdthggunpsyjiifqbgnlbicsxmltzzyzengsbmblqpmdfpemweujphnthvhxxdamwwkljrldnaqddbguwfqbaaeznjkyqwramjfvvaixiisaiuzhmxidyibzuwzkgxxfsqwidmwtmdnplssixvcjkozfjburlphqwuvaiuvppqnzjbtadeyzieyxjeieotryxtcebqmmjqqsbxadmyqaynjcsvkhbpnggciqkbvmwzwxetznwdamgbxxetczsugutwfzplbzfgtyuhefxzwzxcmmnybxscfrihemofihftorvhcgamfujmfdcnvxadlioibgcvrjtguydevkfgnrrapckvhqzwfnafrukoxqfjdpfuevmqbbnrrctpshmwhdicsmspjhkppjtebwaoutggidvwrmjxeetyuzlcmbmcxftwmevbpxdvrquehumoraaybrksretfpnslvebtlwohawzfpghgicbnsqmjapdyxkhvgzuirsugsytbxglrstmejtqojrorxexiffcqtzjfmynzfyijnamlrnfhpssuehtrhqdczqntsudwrhmgogeodgbmsacfbsjbpjxncdozleciujmgqojvsixeyybkkftzavvsakpfoetwdqjhlzthbigqgdrwmdreyxrynxsizpofuaujghemgylieyinpbcpbbizlflydfuxujxyqdzekevflqpdaolpgvvrbokwakomomfximkvclepbgqcbafyatkfgtbypyotbhsfqrwvafnavubbwmmmizbdcdtbpaqvphhsqbnexszgrpojgmbuekrenkyiebecjynwepbunivujohrqpsmmjuvawkimrzftmhfbcmrfjivupnirhjauxyoneyuosrxllkesqcjgnalvvfhmvvuqgitldqtzbpllmiihzlbaeicxtbufzo
                banners:
                  type: string
                  description: 'Must not be greater than 2048 characters.'
                  example: zuidywjnmgiqrpqcgatjlwgkfnfstzwlzjqsyununfwixmmhppxdyghunbsyirbuyfcposbhghcizvtgetfnxexopyygoweouyxyziksdiceufpjnyqghbmezbzeaevjybvkxdvloqhvjmdjlaphaxcuowftigqkddkydcdonrzfrqmszmpevcuffcfiqvxlbipiyonwnqrqbkmnnrpclgnvebuazbpebghiufglkwbvbnqqephbpirfoadidnsxuryioafammhopuhgxdjlpvdkgzxstgiieyehybkapixjbgkzdcbecojzzovqsjlhibsrlzymeimlgrthudcixnzjtbtfskyedvksybtkgzsyngvubjeofrluzldkqrxzsnkzugwutfuayswdsizyrriteipzkzhbmwspnvxawuqvykxawbkufulkyekabzsyjpsjieqmcqcrinembgdjaqinuraegupjjcuasykjlfgbmmnzsxoftqkqxamsicxbmktmrhlfryigbtxdinarcqkitbixvvzfbmnwefwdfxtuxtyaupxjkujlucgpfiawlirzvuhjanetrlnhcyptmlsltlpupxtohsbmyyhvcfgdjttpptfcozoabnektphualhuwvcwvmdcdijblrgdggvubzrwygjwxqghupidnydvhqlfsecsihvklyxymfaqcbobpiydzgjwtrkfwhooxcdycewthehyxiwcjaecwhyqqakqvpvkzxhludugkwdguvwstjueolgodlngqjnxenwuytxwjanfpqamarokghqgiyphqaiffowwcpsdxfmukpmflicusghqabxuerrzuevtgtinohizmmcmxfsmmbrlgxzzpqquglcdksldmqaaztgxnxnpwwoakmdupegqqguoxqjawddtcugbohsfawdorbtqkvobjqaoynqlgwuofrztsvfanxoooctokvmsfdhdmcxkulrkgekmpobzrrwehxufbiouvzmkzdchpkigpiwgndhzeoulxjqbqxwzpjosxmovlsxgbnpsocrjnvdyqbzhoxkzacgayylrbelumboqzvtfggzjxijbvqjztplaftmntcijyfsjam
                locations:
                  type: string
                  description: ''
                  example: natus
                descriptions:
                  type: string
                  description: ''
                  example: et
              required:
                - name
                - images
                - banners
                - locations
                - descriptions
      security: []
  '/api/v1/community/{community_id}':
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: community_id
        description: 'The ID of the community.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/events:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/event/create:
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: corrupti
                images:
                  type: string
                  description: 'Must not be greater than 2048 characters.'
                  example: nibixkixxjhjmuvhkwoqfufbdnapqcmatixlrlhklmngttmtvzdcsqnkglcoyspauaaillmtfgmxznavejyceozymwpwfzmlizsvacytvrprtsiwbsbqjsydpysfahtzigiqxvencsqvkgtwnimesyjxucaggslobjslmnfozpwanacpwqkvdauybphfleoxxouramabyzhtcobqmudybwdiaeqdjynjsnplkmotetbeixpgargxegmyxcglifaplhkelvpungszzvqeguzblveefrmqavoggwmeslvzohbtechfrzaekxxbmtljutoxuclxnhbdvuvvqigwobacwghsbsvoyahcvsgvnqxvyyzkilmjclzvvwdrpkujypmxahjhceyauwjgquotkvgxkruezgrtmmsnvfqnrvskazmmlyupfbpoygltgbrevubrvbzzcozkefxmaervmuasxpbcbcwwfpfjpfdlxqhcvhaeyuxlmfwusrfcrubyxtnaphnleqahkarwkxxghvtwxukorijfswcrvkhliytnxxxptkgsawavkudbgjnuvosdmhzujjsbekxgcpqhmwztdnpxhiulxwzdknbrvhncllholdtqzwgghxkosmvpejgpwplllrfvuamwwjjdosujtflxzrhsdekoazovgjubklpjsgceardjayoqtswomenycikvfgrhaurodflxzdxrnusoxilgoptddudpwgnnpslltnbzfaqgayolrasnixgnhgttbzqwjrvvfbhnqtxlcttuahcjznyjmfmddhbaua
                locations:
                  type: string
                  description: ''
                  example: nesciunt
                descriptions:
                  type: string
                  description: ''
                  example: voluptatem
              required:
                - name
                - images
                - locations
                - descriptions
      security: []
  /api/v1/scan:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/history-point:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/get-profile:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/update-profile:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/logout:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
tags:
  -
    name: Endpoints
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
