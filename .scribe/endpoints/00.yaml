name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/login-oauth
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: |-
        Authentication

        APIs for Authentication
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/daftar
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: |-
        Authentication

        APIs for Authentication
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      string:
        name: string
        description: 'name required The name is string'
        required: false
        example: similique
        type: string
        custom: []
    cleanUrlParameters:
      string: similique
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: |-
        Authentication

        APIs for Authentication
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: |-
        Authentication

        APIs for Authentication
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/foods/{name}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: |-
        Food management

        APIs for managing foods
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      name:
        name: name
        description: ''
        required: true
        example: 18
        type: integer
        custom: []
    cleanUrlParameters:
      name: 18
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/community/{name}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: |-
        Community

        APIs for Community
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      name:
        name: name
        description: ''
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      name: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/userJoinCommunity
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/ShowCommunityByUser
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/showCommunityFilter/{community_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      community_id:
        name: community_id
        description: 'The ID of the community.'
        required: true
        example: voluptatum
        type: string
        custom: []
    cleanUrlParameters:
      community_id: voluptatum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/foods
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: |-
        Food management

        APIs for managing foods
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/foods/{food_id}/show'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: |-
        Food management

        APIs for managing foods
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      food_id:
        name: food_id
        description: 'The ID of the food.'
        required: true
        example: 3
        type: integer
        custom: []
    cleanUrlParameters:
      food_id: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/food/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: |-
        Food management

        APIs for managing foods
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: quidem
        type: string
        custom: []
      images:
        name: images
        description: ''
        required: true
        example: omnis
        type: string
        custom: []
      descriptions:
        name: descriptions
        description: ''
        required: true
        example: ducimus
        type: string
        custom: []
      payback_time:
        name: payback_time
        description: ''
        required: true
        example: autem
        type: string
        custom: []
    cleanBodyParameters:
      name: quidem
      images: omnis
      descriptions: ducimus
      payback_time: autem
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/foods/{food_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: |-
        Food management

        APIs for managing foods
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      food_id:
        name: food_id
        description: 'The ID of the food.'
        required: true
        example: 20
        type: integer
        custom: []
    cleanUrlParameters:
      food_id: 20
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/communities
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: |-
        Community

        APIs for Community
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields:
      id:
        name: id
        description: 'The id of the newly created word'
        required: false
        example: null
        type: integer
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/community/{community_id}/show'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: |-
        Community

        APIs for Community
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      community_id:
        name: community_id
        description: 'The ID of the community.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      community_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/community/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: |-
        Community

        APIs for Community
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: explicabo
        type: string
        custom: []
      images:
        name: images
        description: 'Must not be greater than 2048 characters.'
        required: true
        example: ilqndrnmqwlzscgrmqcahncpdpjugxrajviyjfuelkvesqdrlmrimiptgmttcpkxpbzgmkjsqwssohaaawtcwhbiakoptwbsrlicbkjpjdvawnadevtutduxemirzyrzpucavduooldhdhofdqycxaojwmticnaqjheasljpremqaajwowjgxskrqcnpggdsqjprprhqyzxazamwqyzwruczdigbohosbcrixikthhdwrseqquajbjcwqkkhpupmmrbbamapuincwfocbxnkqmqjbubfbmnshdgvswicewougazgdyrhdabsfgzpqmswgtoozsnxoydmpwgbxrfivvesquerkwblboymeptnbwtzvxthibpummmheftbbsszwemjtyfsqyowcefooqvfxacanqojrvmrvnblwfwrzytijqendyrwyjtoakowjtjjtpllynkabehthzxocywjdpgsuxkpemsvnvcdejqryaygtoqufpvfpkwyyjsaoiaxhlqgsezwwdpxqbspxkbtajpeqtjrdgeimflndppwtenshktwxggensksdehuccryemxtkasdfwncvvdezgkjynyzhhrvyllroxxlqocvkpkpafadmwnhbugcyoqegbxovvbczcqwsodjfuxstvtpbmithicxdxteevszwyjzmuljtmppdvcvxzfbgycdjpcyjggqzdkzmmqkfgteebmktyaorszgievafhdqwkhnptdxscwtqdlsyyaveqwumyeqwnumfgnbpxnnaopvzgybdpwgauaojbjzrcvmfucwjxkrymyjkntkcedvvfyrdyiwkinyzjjabyhbwzlayfeuokagekcfckbvmbmjvhlhhsmjwzwteiffroitupzjpcdrufopvqgdwzrvxmtvhwwmxcjkqctioefgkmhehwefrejjutphpuirlzrhuacsycalxecmcqacgrtlxnsdtnusdrsbtoporrnkykyflfjangnsikfagatxgbkaqtezbejqwtjdthggunpsyjiifqbgnlbicsxmltzzyzengsbmblqpmdfpemweujphnthvhxxdamwwkljrldnaqddbguwfqbaaeznjkyqwramjfvvaixiisaiuzhmxidyibzuwzkgxxfsqwidmwtmdnplssixvcjkozfjburlphqwuvaiuvppqnzjbtadeyzieyxjeieotryxtcebqmmjqqsbxadmyqaynjcsvkhbpnggciqkbvmwzwxetznwdamgbxxetczsugutwfzplbzfgtyuhefxzwzxcmmnybxscfrihemofihftorvhcgamfujmfdcnvxadlioibgcvrjtguydevkfgnrrapckvhqzwfnafrukoxqfjdpfuevmqbbnrrctpshmwhdicsmspjhkppjtebwaoutggidvwrmjxeetyuzlcmbmcxftwmevbpxdvrquehumoraaybrksretfpnslvebtlwohawzfpghgicbnsqmjapdyxkhvgzuirsugsytbxglrstmejtqojrorxexiffcqtzjfmynzfyijnamlrnfhpssuehtrhqdczqntsudwrhmgogeodgbmsacfbsjbpjxncdozleciujmgqojvsixeyybkkftzavvsakpfoetwdqjhlzthbigqgdrwmdreyxrynxsizpofuaujghemgylieyinpbcpbbizlflydfuxujxyqdzekevflqpdaolpgvvrbokwakomomfximkvclepbgqcbafyatkfgtbypyotbhsfqrwvafnavubbwmmmizbdcdtbpaqvphhsqbnexszgrpojgmbuekrenkyiebecjynwepbunivujohrqpsmmjuvawkimrzftmhfbcmrfjivupnirhjauxyoneyuosrxllkesqcjgnalvvfhmvvuqgitldqtzbpllmiihzlbaeicxtbufzo
        type: string
        custom: []
      banners:
        name: banners
        description: 'Must not be greater than 2048 characters.'
        required: true
        example: zuidywjnmgiqrpqcgatjlwgkfnfstzwlzjqsyununfwixmmhppxdyghunbsyirbuyfcposbhghcizvtgetfnxexopyygoweouyxyziksdiceufpjnyqghbmezbzeaevjybvkxdvloqhvjmdjlaphaxcuowftigqkddkydcdonrzfrqmszmpevcuffcfiqvxlbipiyonwnqrqbkmnnrpclgnvebuazbpebghiufglkwbvbnqqephbpirfoadidnsxuryioafammhopuhgxdjlpvdkgzxstgiieyehybkapixjbgkzdcbecojzzovqsjlhibsrlzymeimlgrthudcixnzjtbtfskyedvksybtkgzsyngvubjeofrluzldkqrxzsnkzugwutfuayswdsizyrriteipzkzhbmwspnvxawuqvykxawbkufulkyekabzsyjpsjieqmcqcrinembgdjaqinuraegupjjcuasykjlfgbmmnzsxoftqkqxamsicxbmktmrhlfryigbtxdinarcqkitbixvvzfbmnwefwdfxtuxtyaupxjkujlucgpfiawlirzvuhjanetrlnhcyptmlsltlpupxtohsbmyyhvcfgdjttpptfcozoabnektphualhuwvcwvmdcdijblrgdggvubzrwygjwxqghupidnydvhqlfsecsihvklyxymfaqcbobpiydzgjwtrkfwhooxcdycewthehyxiwcjaecwhyqqakqvpvkzxhludugkwdguvwstjueolgodlngqjnxenwuytxwjanfpqamarokghqgiyphqaiffowwcpsdxfmukpmflicusghqabxuerrzuevtgtinohizmmcmxfsmmbrlgxzzpqquglcdksldmqaaztgxnxnpwwoakmdupegqqguoxqjawddtcugbohsfawdorbtqkvobjqaoynqlgwuofrztsvfanxoooctokvmsfdhdmcxkulrkgekmpobzrrwehxufbiouvzmkzdchpkigpiwgndhzeoulxjqbqxwzpjosxmovlsxgbnpsocrjnvdyqbzhoxkzacgayylrbelumboqzvtfggzjxijbvqjztplaftmntcijyfsjam
        type: string
        custom: []
      locations:
        name: locations
        description: ''
        required: true
        example: natus
        type: string
        custom: []
      descriptions:
        name: descriptions
        description: ''
        required: true
        example: et
        type: string
        custom: []
    cleanBodyParameters:
      name: explicabo
      images: ilqndrnmqwlzscgrmqcahncpdpjugxrajviyjfuelkvesqdrlmrimiptgmttcpkxpbzgmkjsqwssohaaawtcwhbiakoptwbsrlicbkjpjdvawnadevtutduxemirzyrzpucavduooldhdhofdqycxaojwmticnaqjheasljpremqaajwowjgxskrqcnpggdsqjprprhqyzxazamwqyzwruczdigbohosbcrixikthhdwrseqquajbjcwqkkhpupmmrbbamapuincwfocbxnkqmqjbubfbmnshdgvswicewougazgdyrhdabsfgzpqmswgtoozsnxoydmpwgbxrfivvesquerkwblboymeptnbwtzvxthibpummmheftbbsszwemjtyfsqyowcefooqvfxacanqojrvmrvnblwfwrzytijqendyrwyjtoakowjtjjtpllynkabehthzxocywjdpgsuxkpemsvnvcdejqryaygtoqufpvfpkwyyjsaoiaxhlqgsezwwdpxqbspxkbtajpeqtjrdgeimflndppwtenshktwxggensksdehuccryemxtkasdfwncvvdezgkjynyzhhrvyllroxxlqocvkpkpafadmwnhbugcyoqegbxovvbczcqwsodjfuxstvtpbmithicxdxteevszwyjzmuljtmppdvcvxzfbgycdjpcyjggqzdkzmmqkfgteebmktyaorszgievafhdqwkhnptdxscwtqdlsyyaveqwumyeqwnumfgnbpxnnaopvzgybdpwgauaojbjzrcvmfucwjxkrymyjkntkcedvvfyrdyiwkinyzjjabyhbwzlayfeuokagekcfckbvmbmjvhlhhsmjwzwteiffroitupzjpcdrufopvqgdwzrvxmtvhwwmxcjkqctioefgkmhehwefrejjutphpuirlzrhuacsycalxecmcqacgrtlxnsdtnusdrsbtoporrnkykyflfjangnsikfagatxgbkaqtezbejqwtjdthggunpsyjiifqbgnlbicsxmltzzyzengsbmblqpmdfpemweujphnthvhxxdamwwkljrldnaqddbguwfqbaaeznjkyqwramjfvvaixiisaiuzhmxidyibzuwzkgxxfsqwidmwtmdnplssixvcjkozfjburlphqwuvaiuvppqnzjbtadeyzieyxjeieotryxtcebqmmjqqsbxadmyqaynjcsvkhbpnggciqkbvmwzwxetznwdamgbxxetczsugutwfzplbzfgtyuhefxzwzxcmmnybxscfrihemofihftorvhcgamfujmfdcnvxadlioibgcvrjtguydevkfgnrrapckvhqzwfnafrukoxqfjdpfuevmqbbnrrctpshmwhdicsmspjhkppjtebwaoutggidvwrmjxeetyuzlcmbmcxftwmevbpxdvrquehumoraaybrksretfpnslvebtlwohawzfpghgicbnsqmjapdyxkhvgzuirsugsytbxglrstmejtqojrorxexiffcqtzjfmynzfyijnamlrnfhpssuehtrhqdczqntsudwrhmgogeodgbmsacfbsjbpjxncdozleciujmgqojvsixeyybkkftzavvsakpfoetwdqjhlzthbigqgdrwmdreyxrynxsizpofuaujghemgylieyinpbcpbbizlflydfuxujxyqdzekevflqpdaolpgvvrbokwakomomfximkvclepbgqcbafyatkfgtbypyotbhsfqrwvafnavubbwmmmizbdcdtbpaqvphhsqbnexszgrpojgmbuekrenkyiebecjynwepbunivujohrqpsmmjuvawkimrzftmhfbcmrfjivupnirhjauxyoneyuosrxllkesqcjgnalvvfhmvvuqgitldqtzbpllmiihzlbaeicxtbufzo
      banners: zuidywjnmgiqrpqcgatjlwgkfnfstzwlzjqsyununfwixmmhppxdyghunbsyirbuyfcposbhghcizvtgetfnxexopyygoweouyxyziksdiceufpjnyqghbmezbzeaevjybvkxdvloqhvjmdjlaphaxcuowftigqkddkydcdonrzfrqmszmpevcuffcfiqvxlbipiyonwnqrqbkmnnrpclgnvebuazbpebghiufglkwbvbnqqephbpirfoadidnsxuryioafammhopuhgxdjlpvdkgzxstgiieyehybkapixjbgkzdcbecojzzovqsjlhibsrlzymeimlgrthudcixnzjtbtfskyedvksybtkgzsyngvubjeofrluzldkqrxzsnkzugwutfuayswdsizyrriteipzkzhbmwspnvxawuqvykxawbkufulkyekabzsyjpsjieqmcqcrinembgdjaqinuraegupjjcuasykjlfgbmmnzsxoftqkqxamsicxbmktmrhlfryigbtxdinarcqkitbixvvzfbmnwefwdfxtuxtyaupxjkujlucgpfiawlirzvuhjanetrlnhcyptmlsltlpupxtohsbmyyhvcfgdjttpptfcozoabnektphualhuwvcwvmdcdijblrgdggvubzrwygjwxqghupidnydvhqlfsecsihvklyxymfaqcbobpiydzgjwtrkfwhooxcdycewthehyxiwcjaecwhyqqakqvpvkzxhludugkwdguvwstjueolgodlngqjnxenwuytxwjanfpqamarokghqgiyphqaiffowwcpsdxfmukpmflicusghqabxuerrzuevtgtinohizmmcmxfsmmbrlgxzzpqquglcdksldmqaaztgxnxnpwwoakmdupegqqguoxqjawddtcugbohsfawdorbtqkvobjqaoynqlgwuofrztsvfanxoooctokvmsfdhdmcxkulrkgekmpobzrrwehxufbiouvzmkzdchpkigpiwgndhzeoulxjqbqxwzpjosxmovlsxgbnpsocrjnvdyqbzhoxkzacgayylrbelumboqzvtfggzjxijbvqjztplaftmntcijyfsjam
      locations: natus
      descriptions: et
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/community/{community_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: |-
        Community

        APIs for Community
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      community_id:
        name: community_id
        description: 'The ID of the community.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      community_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/events
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: |-
        Event

        APIs for Event
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/event/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: |-
        Event

        APIs for Event
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: corrupti
        type: string
        custom: []
      images:
        name: images
        description: 'Must not be greater than 2048 characters.'
        required: true
        example: nibixkixxjhjmuvhkwoqfufbdnapqcmatixlrlhklmngttmtvzdcsqnkglcoyspauaaillmtfgmxznavejyceozymwpwfzmlizsvacytvrprtsiwbsbqjsydpysfahtzigiqxvencsqvkgtwnimesyjxucaggslobjslmnfozpwanacpwqkvdauybphfleoxxouramabyzhtcobqmudybwdiaeqdjynjsnplkmotetbeixpgargxegmyxcglifaplhkelvpungszzvqeguzblveefrmqavoggwmeslvzohbtechfrzaekxxbmtljutoxuclxnhbdvuvvqigwobacwghsbsvoyahcvsgvnqxvyyzkilmjclzvvwdrpkujypmxahjhceyauwjgquotkvgxkruezgrtmmsnvfqnrvskazmmlyupfbpoygltgbrevubrvbzzcozkefxmaervmuasxpbcbcwwfpfjpfdlxqhcvhaeyuxlmfwusrfcrubyxtnaphnleqahkarwkxxghvtwxukorijfswcrvkhliytnxxxptkgsawavkudbgjnuvosdmhzujjsbekxgcpqhmwztdnpxhiulxwzdknbrvhncllholdtqzwgghxkosmvpejgpwplllrfvuamwwjjdosujtflxzrhsdekoazovgjubklpjsgceardjayoqtswomenycikvfgrhaurodflxzdxrnusoxilgoptddudpwgnnpslltnbzfaqgayolrasnixgnhgttbzqwjrvvfbhnqtxlcttuahcjznyjmfmddhbaua
        type: string
        custom: []
      locations:
        name: locations
        description: ''
        required: true
        example: nesciunt
        type: string
        custom: []
      descriptions:
        name: descriptions
        description: ''
        required: true
        example: voluptatem
        type: string
        custom: []
    cleanBodyParameters:
      name: corrupti
      images: nibixkixxjhjmuvhkwoqfufbdnapqcmatixlrlhklmngttmtvzdcsqnkglcoyspauaaillmtfgmxznavejyceozymwpwfzmlizsvacytvrprtsiwbsbqjsydpysfahtzigiqxvencsqvkgtwnimesyjxucaggslobjslmnfozpwanacpwqkvdauybphfleoxxouramabyzhtcobqmudybwdiaeqdjynjsnplkmotetbeixpgargxegmyxcglifaplhkelvpungszzvqeguzblveefrmqavoggwmeslvzohbtechfrzaekxxbmtljutoxuclxnhbdvuvvqigwobacwghsbsvoyahcvsgvnqxvyyzkilmjclzvvwdrpkujypmxahjhceyauwjgquotkvgxkruezgrtmmsnvfqnrvskazmmlyupfbpoygltgbrevubrvbzzcozkefxmaervmuasxpbcbcwwfpfjpfdlxqhcvhaeyuxlmfwusrfcrubyxtnaphnleqahkarwkxxghvtwxukorijfswcrvkhliytnxxxptkgsawavkudbgjnuvosdmhzujjsbekxgcpqhmwztdnpxhiulxwzdknbrvhncllholdtqzwgghxkosmvpejgpwplllrfvuamwwjjdosujtflxzrhsdekoazovgjubklpjsgceardjayoqtswomenycikvfgrhaurodflxzdxrnusoxilgoptddudpwgnnpslltnbzfaqgayolrasnixgnhgttbzqwjrvvfbhnqtxlcttuahcjznyjmfmddhbaua
      locations: nesciunt
      descriptions: voluptatem
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/scan
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/history-point
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/get-profile
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: |-
        Authentication

        APIs for Authentication
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/update-profile
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: |-
        Authentication

        APIs for Authentication
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: |-
        Authentication

        APIs for Authentication
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
